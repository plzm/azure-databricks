{"version":"NotebookV1","origId":2829134997222994,"name":"adb_2_connect_storage","language":"python","commands":[{"version":"CommandV1","origId":2829134997222997,"guid":"87d92fe8-b8b2-4360-aaf5-e07f0bfa9c4e","subtype":"command","commandType":"auto","position":2.0,"command":"# ls in the newly mounted mount point / in the mounted container\ndisplay(dbutils.fs.ls(\"/mnt/\" + containerName))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1543352682627,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"paelaz@microsoft.com","latestUserId":"2080694937739106","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e97636d4-8b4e-4636-a11d-e65b724a6a78"},{"version":"CommandV1","origId":2829134997222999,"guid":"c0376589-d5b9-40c6-afc1-e7f000623739","subtype":"command","commandType":"auto","position":4.0,"command":"# Unmount the storage mount point\ndbutils.fs.unmount(\"/mnt/\" + containerName)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1543401619956,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"paelaz@microsoft.com","latestUserId":"2080694937739106","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"67b3f334-8b0c-49bd-87af-73b4f8da84a0"},{"version":"CommandV1","origId":2829134997223000,"guid":"87559cdb-a630-4c9c-a04b-febacaf9d250","subtype":"command","commandType":"auto","position":5.0,"command":"# Refresh mounts on other clusters than the one that ran DBFS commands\n# dbutils.fs.refreshMounts()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1543349495772,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"paelaz@microsoft.com","latestUserId":"2080694937739106","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5ab9fc7a-7120-48fe-81f2-27e9ec4c4077"},{"version":"CommandV1","origId":2829134997223001,"guid":"2a328a6b-d240-40ae-ae6b-6fc7c820e8a6","subtype":"command","commandType":"auto","position":6.0,"command":"display(dbutils.fs.ls(\"/mnt\"))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1543403298133,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"paelaz@microsoft.com","latestUserId":"2080694937739106","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"9153d6b8-1a59-40b8-87b6-d82533ab9b52"},{"version":"CommandV1","origId":2829134997223003,"guid":"d08b2d9c-218b-4d9a-8f22-3aaa6883d3d2","subtype":"command","commandType":"auto","position":0.5,"command":"storageAcctName = \"pxbrixsa\"\ncontainerName = \"dat202\"\n\nsecretScopeName = \"pzbrixscope\"\nsecretName = \"pzbrixsakey\"\n\nmountPoint = \"/mnt/\" + containerName","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1543401617030,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"paelaz@microsoft.com","latestUserId":"2080694937739106","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"d8140f04-53d4-4bb1-b208-103cc39fce0e"},{"version":"CommandV1","origId":2829134997223007,"guid":"5274451e-e8d6-43f7-ac11-6a76d5e21b6d","subtype":"command","commandType":"auto","position":0.6875,"command":"# Explicit version works but hard-codes container and storage account names - have not been able to get this to work with variables and string concat\ndbutils.fs.mount(\n  source = \"wasbs://dat202@pzbrixsa.blob.core.windows.net\",\n  mount_point = mountPoint,\n  extra_configs = {\"fs.azure.account.key.pzbrixsa.blob.core.windows.net\":dbutils.secrets.get(scope = secretScopeName, key = secretName)}\n)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1543402439734,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"paelaz@microsoft.com","latestUserId":"2080694937739106","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"930c5086-344b-4b33-8bc6-2ade70ee01de"},{"version":"CommandV1","origId":3551257439585047,"guid":"a716521f-1d3f-4052-ae18-6836d8e0ad0d","subtype":"command","commandType":"auto","position":1.34375,"command":"# This (or a version of the above using variables) does not work. Gets java.lang.IllegalArgumentException due to invalid mount source. ??\ndbutils.fs.mount(\n        \"wasbs://{cn}@{san}.blob.core.windows.net\"\n        .format(\n            cn=containerName,\n            san=storageAcctName),\n        \"/mnt/{mn}\".format(mn=mountPoint)\n    )","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1543401905348,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"paelaz@microsoft.com","latestUserId":"2080694937739106","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"fc6dccbd-0b21-4b47-853f-8917326d3a83"},{"version":"CommandV1","origId":3551257439585048,"guid":"d17efd5a-e3f0-4cd2-81ae-24acf1d4abe0","subtype":"command","commandType":"auto","position":7.0,"command":"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"30426d46-ba0b-4e2e-b3ec-e5aa6ec1d642"},{"version":"CommandV1","origId":3551257439585049,"guid":"9540f5d6-5425-448d-ae2a-c642bc91a5ef","subtype":"command","commandType":"auto","position":0.25,"command":"%md\nReferences:<br>\nhttps://docs.azuredatabricks.net/user-guide/secrets/secrets.html<br>\nhttps://docs.azuredatabricks.net/spark/latest/data-sources/azure/azure-storage.html<br>\nhttps://docs.azuredatabricks.net/user-guide/dbfs-databricks-file-system.html<br>\n\nNotes:\nDBFS commands are very specific. Some hard-coding/specific formats -required-.\n\nPrefer Azure Key Vault for secret storage.<br>\nCreate Azure Key Vault, store secret there. Then create ADB secret scope.<br>\nThen use secret scope and storage acct info to mount storage acct/container to DBFS mount point.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"53a32c59-0b61-4e8b-bf0a-89d1125e0830"}],"dashboards":[],"guid":"1c0db238-e6e1-4db9-9a09-a78f0ee2a7a1","globalVars":{},"iPythonMetadata":null,"inputWidgets":{}}